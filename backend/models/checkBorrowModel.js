// backend/controllers/checkBorrow.js
const { pool } = require('../config/db'); // db connect ‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì

// ‚úÖ ‡πÄ‡∏ä‡πá‡∏Ñ‡∏ß‡πà‡∏≤‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ô‡∏µ‡πâ‡∏¢‡∏±‡∏á‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡∏¢‡∏∑‡∏°‡∏Ñ‡πâ‡∏≤‡∏á‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
exports.checkPendingBorrow = async (req, res) => {
    const { userId, itemId } = req.params;  // ‡∏≠‡∏≤‡∏à‡∏™‡πà‡∏á‡∏°‡∏≤‡πÄ‡∏â‡∏û‡∏≤‡∏∞ userId ‡∏´‡∏£‡∏∑‡∏≠ userId+itemId

    try {
        let query;
        let values;

        if (itemId) {
            // üëâ ‡πÅ‡∏ö‡∏ö‡πÄ‡∏ä‡πá‡∏Ñ‡πÄ‡∏â‡∏û‡∏≤‡∏∞ item
            query = `
        SELECT r.request_id, rd.item_id, r.borrow_status
        FROM requests r
        JOIN request_details rd ON r.request_id = rd.request_id
        WHERE r.user_id = $1 
          AND rd.item_id = $2
          AND r.borrow_status IN ('waiting_borrow','borrowing')
      `;
            values = [userId, itemId];
        } else {
            // üëâ ‡πÅ‡∏ö‡∏ö‡πÄ‡∏ä‡πá‡∏Ñ‡∏ó‡∏±‡πâ‡∏á user
            query = `
        SELECT request_id, borrow_status
        FROM requests
        WHERE user_id = $1
          AND borrow_status IN ('waiting_borrow','borrowing')
      `;
            values = [userId];
        }

        const result = await pool.query(query, values);

        if (result.rows.length > 0) {
            return res.status(200).json({ hasPending: true, data: result.rows });
        }

        return res.status(200).json({ hasPending: false });
    } catch (err) {
        console.error('‚ùå Error checkPendingBorrow:', err);
        res.status(500).json({ message: '‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏¢‡∏∑‡∏°' });
    }
};
