'use client'

import { useRouter } from 'next/navigation'
import { useState } from 'react'
import styles from './page.module.css'

export default function HomePage() {
  const router = useRouter()
  const [selectedRole, setSelectedRole] = useState(null)
  const [tokenInput, setTokenInput] = useState('')
  const [isLoading, setIsLoading] = useState(false)

  const handleNavigate = (role) => {
    // ‚úÖ ‡∏ù‡πà‡∏≤‡∏¢‡∏à‡∏±‡∏î‡∏ã‡∏∑‡πâ‡∏≠‡πÄ‡∏Ç‡πâ‡∏≤‡πÑ‡∏î‡πâ‡πÄ‡∏•‡∏¢‡πÇ‡∏î‡∏¢‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡πÉ‡∏ä‡πâ token
    if (role === 'purchasing') {
      setIsLoading(true)
      setTimeout(() => {
        router.push(`/${role}`)
      }, 500)
      return
    }

    // ‡∏™‡πà‡∏ß‡∏ô‡∏≠‡∏∑‡πà‡∏ô‡πÜ ‡∏¢‡∏±‡∏á‡∏ï‡πâ‡∏≠‡∏á‡πÉ‡∏ä‡πâ token ‡∏ï‡∏≤‡∏°‡πÄ‡∏î‡∏¥‡∏°
    const token = localStorage.getItem(`authToken_${role}`)
    if (!token) {
      setSelectedRole(role)
      return
    }
    setIsLoading(true)
    setTimeout(() => {
      router.push(`/${role}`)
    }, 500)
  }

  const handleSaveToken = () => {
    if (!tokenInput.trim()) {
      showNotification('‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å Token ‡∏Å‡πà‡∏≠‡∏ô', 'error')
      return
    }

    setIsLoading(true)
    localStorage.setItem(`authToken_${selectedRole}`, tokenInput)

    setTimeout(() => {
      showNotification(`‚úÖ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å Token ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö ${getRoleDisplayName(selectedRole)} ‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß`)
      setTokenInput('')
      setSelectedRole(null)
      setIsLoading(false)
      router.push(`/${selectedRole}`)
    }, 1000)
  }

  const getRoleDisplayName = (role) => {
    const roleNames = {
      manage: '‡πÄ‡∏à‡πâ‡∏≤‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏µ‡πà‡∏Ñ‡∏•‡∏±‡∏á‡∏û‡∏±‡∏™‡∏î‡∏∏',
      staff: '‡∏´‡∏°‡∏≠/‡∏û‡∏¢‡∏≤‡∏ö‡∏≤‡∏•',
      purchasing: '‡∏à‡∏±‡∏î‡∏ã‡∏∑‡πâ‡∏≠'
    }
    return roleNames[role] || role
  }

  const showNotification = (message, type = 'success') => {
    // Create notification element
    const notification = document.createElement('div')
    notification.className = styles.notification
    notification.textContent = message

    if (type === 'error') {
      notification.style.background = 'linear-gradient(135deg, #ef4444, #dc2626)'
    }

    document.body.appendChild(notification)

    setTimeout(() => {
      notification.remove()
    }, 3000)
  }

  const handleCancelToken = () => {
    setSelectedRole(null)
    setTokenInput('')
  }

  return (
    <main className={styles.container}>
      <div className={styles.card}>
        <h1 className={styles.title}>Hospital Inventory System</h1>
        <p className={styles.description}>‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô</p>

        <div className={styles.buttonGroup}>
          <button
            onClick={() => handleNavigate('manage')}
            className={`${styles.button} ${styles.manager} ${isLoading ? styles.loading : ''}`}
            disabled={isLoading}
          >
            ‡πÄ‡∏à‡πâ‡∏≤‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏µ‡πà‡∏Ñ‡∏•‡∏±‡∏á‡∏û‡∏±‡∏™‡∏î‡∏∏
          </button>
          <button
            onClick={() => handleNavigate('staff')}
            className={`${styles.button} ${styles.user} ${isLoading ? styles.loading : ''}`}
            disabled={isLoading}
          >
            ‡∏´‡∏°‡∏≠ / ‡∏û‡∏¢‡∏≤‡∏ö‡∏≤‡∏•
          </button>
          <button
            onClick={() => handleNavigate('purchasing')}
            className={`${styles.button} ${styles.purchasing} ${isLoading ? styles.loading : ''}`}
            disabled={isLoading}
          >
            ‡∏à‡∏±‡∏î‡∏ã‡∏∑‡πâ‡∏≠
          </button>
        </div>

        {/* ‡∏ñ‡πâ‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å role ‡πÅ‡∏ï‡πà‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ token ‚Üí ‡πÇ‡∏ä‡∏ß‡πå‡∏ü‡∏≠‡∏£‡πå‡∏° */}
        {selectedRole && (
          <div className={styles.tokenForm}>
            <h3>üîê ‡πÉ‡∏™‡πà Token ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö {getRoleDisplayName(selectedRole)}</h3>
            <textarea
              value={tokenInput}
              onChange={(e) => setTokenInput(e.target.value)}
              rows={4}
              className={styles.tokenTextarea}
              placeholder="‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ß‡∏≤‡∏á Authorization Token ‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà..."
              disabled={isLoading}
            />
            <div style={{ display: 'flex', gap: '1rem' }}>
              <button
                onClick={handleSaveToken}
                className={`${styles.saveButton} ${isLoading ? styles.loading : ''}`}
                disabled={isLoading}
                style={{ flex: 1 }}
              >
                {isLoading ? '‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å...' : 'Save Token & ‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö'}
              </button>
              <button
                onClick={handleCancelToken}
                className={`${styles.button} ${styles.cancelButton}`}
                disabled={isLoading}
                style={{
                  flex: 'none',
                  padding: '1rem 1.5rem'
                }}
              >
                ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å
              </button>
            </div>
          </div>
        )}
      </div>
    </main>
  )
}