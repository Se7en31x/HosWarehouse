"use client";
import { useEffect, useState, useMemo } from "react";
import axiosInstance from "@/app/utils/axiosInstance";
import styles from "./page.module.css";

export default function StockOutHistoryPage() {
  const [records, setRecords] = useState([]);
  const [selected, setSelected] = useState(null);
  const [details, setDetails] = useState([]); // ‚úÖ ‡πÄ‡∏Å‡πá‡∏ö detail ‡∏Ç‡∏≠‡∏á‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å

  // ‚úÖ ‡πÅ‡∏ú‡∏ô‡∏ó‡∏µ‡πà‡πÅ‡∏õ‡∏•‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó
  const typeMap = {
    withdraw: "‡πÄ‡∏ö‡∏¥‡∏Å‡∏û‡∏±‡∏™‡∏î‡∏∏",
    borrow: "‡∏¢‡∏∑‡∏°‡∏≠‡∏≠‡∏Å",
    return_damaged: "‡∏Ñ‡∏∑‡∏ô‡∏™‡∏†‡∏≤‡∏û‡∏ä‡∏≥‡∏£‡∏∏‡∏î",
    damaged_dispose: "‡∏ó‡∏≥‡∏•‡∏≤‡∏¢‡∏ä‡∏≥‡∏£‡∏∏‡∏î",
    expired_dispose: "‡∏ó‡∏≥‡∏•‡∏≤‡∏¢‡∏´‡∏°‡∏î‡∏≠‡∏≤‡∏¢‡∏∏",
    adjust_out: "‡∏õ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∏‡∏á‡∏¢‡∏≠‡∏î‡∏ï‡∏±‡∏î‡∏≠‡∏≠‡∏Å",
    return_lost: "‡∏™‡∏π‡∏ç‡∏´‡∏≤‡∏¢ (‡∏ï‡∏£‡∏ß‡∏à‡∏ô‡∏±‡∏ö)",
  };

  useEffect(() => {
    axiosInstance.get("/history/stockout").then((res) => setRecords(res.data));
  }, []);

  // ‚úÖ Dashboard
  const summary = useMemo(
    () => ({
      total: records.length,
      withdraw: records.filter((r) => r.stockout_type === "withdraw").length,
      borrow: records.filter((r) => r.stockout_type === "borrow").length,
      expired_dispose: records.filter(
        (r) => r.stockout_type === "expired_dispose"
      ).length,
    }),
    [records]
  );

  // ‚úÖ ‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏Å‡∏î‡∏î‡∏π
  const handleShowDetail = async (doc) => {
    setSelected(doc);
    try {
      const res = await axiosInstance.get(`/history/stockout/${doc.stockout_id}`);
      setDetails(res.data || []); // ‚úÖ ‡πÉ‡∏ä‡πâ array ‡∏ï‡∏£‡∏á ‡πÜ
    } catch (err) {
      console.error("‚ùå Error fetching stockout detail:", err);
      setDetails([]);
    }
  };

  return (
    <div className={styles.container}>
      <h2 className={styles.subtitle}>üì¶ ‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡∏î‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏Ñ‡∏•‡∏±‡∏á (Stock Out)</h2>

      {/* Dashboard */}
      <div className={styles.dashboard}>
        <div className={styles.card}>
          <h3>‡∏£‡∏ß‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î</h3>
          <p>{summary.total} ‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£</p>
        </div>
        <div className={styles.card}>
          <h3>‡πÄ‡∏ö‡∏¥‡∏Å‡∏û‡∏±‡∏™‡∏î‡∏∏</h3>
          <p>{summary.withdraw} ‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£</p>
        </div>
        <div className={styles.card}>
          <h3>‡∏¢‡∏∑‡∏°‡∏≠‡∏≠‡∏Å</h3>
          <p>{summary.borrow} ‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£</p>
        </div>
        <div className={styles.card}>
          <h3>‡∏ó‡∏≥‡∏•‡∏≤‡∏¢‡∏´‡∏°‡∏î‡∏≠‡∏≤‡∏¢‡∏∏</h3>
          <p>{summary.expired_dispose} ‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£</p>
        </div>
      </div>

      {/* ‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏´‡∏•‡∏±‡∏Å */}
      <table className={styles.table}>
        <thead>
          <tr>
            <th>‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà</th>
            <th>‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£</th>
            <th>‡∏ú‡∏π‡πâ‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£</th>
            <th>‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó</th>
            <th></th>
          </tr>
        </thead>
        <tbody>
          {records.map((r) => (
            <tr key={r.stockout_id}>
              <td>{new Date(r.stockout_date).toLocaleDateString("th-TH")}</td>
              <td>{r.stockout_no || "-"}</td>
              <td>{r.user_name}</td>
              <td>{typeMap[r.stockout_type] || "‡∏≠‡∏∑‡πà‡∏ô ‡πÜ"}</td>
              <td>
                <button
                  className={styles.detailBtn}
                  onClick={() => handleShowDetail(r)}
                >
                  ‡∏î‡∏π‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î
                </button>
              </td>
            </tr>
          ))}
        </tbody>
      </table>

      {/* Modal ‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î */}
      {selected && (
        <div className={styles.modalOverlay}>
          <div className={styles.modal}>
            <h3>‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£</h3>
            <p>
              <b>‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£:</b> {selected.stockout_no || "-"}
            </p>
            <p>
              <b>‡∏ï‡∏±‡∏î‡∏≠‡∏≠‡∏Å‡πÇ‡∏î‡∏¢:</b> {selected.user_name}
            </p>
            <p>
              <b>‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó:</b> {typeMap[selected.stockout_type] || "‡∏≠‡∏∑‡πà‡∏ô ‡πÜ"}
            </p>
            <p>
              <b>‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÄ‡∏°‡∏∑‡πà‡∏≠:</b>{" "}
              {selected.created_at
                ? new Date(selected.created_at).toLocaleDateString("th-TH")
                : "-"}
            </p>

            {/* ‚úÖ ‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡πÅ‡∏™‡∏î‡∏á‡∏û‡∏±‡∏™‡∏î‡∏∏‡πÉ‡∏ô‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£ */}
            <h4 style={{ marginTop: "1rem" }}>‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏û‡∏±‡∏™‡∏î‡∏∏</h4>
            <table className={styles.table}>
              <thead>
                <tr>
                  <th>‡∏û‡∏±‡∏™‡∏î‡∏∏</th>
                  <th>‡∏à‡∏≥‡∏ô‡∏ß‡∏ô</th>
                  <th>Lot No</th>
                  <th>‡∏ß‡∏±‡∏ô‡∏´‡∏°‡∏î‡∏≠‡∏≤‡∏¢‡∏∏</th>
                </tr>
              </thead>
              <tbody>
                {details.length > 0 ? (
                  details.map((d) => (
                    <tr key={d.stockout_detail_id}>
                      <td>{d.item_name}</td>
                      <td>
                        {d.qty} {d.unit}
                      </td>
                      <td>{d.lot_no || "-"}</td>
                      <td>
                        {d.exp_date
                          ? new Date(d.exp_date).toLocaleDateString("th-TH")
                          : "-"}
                      </td>
                    </tr>
                  ))
                ) : (
                  <tr>
                    <td
                      colSpan={4}
                      style={{ textAlign: "center", color: "#6b7280" }}
                    >
                      ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏û‡∏±‡∏™‡∏î‡∏∏
                    </td>
                  </tr>
                )}
              </tbody>
            </table>

            <button
              className={styles.closeBtn}
              onClick={() => {
                setSelected(null);
                setDetails([]);
              }}
            >
              ‡∏õ‡∏¥‡∏î
            </button>
          </div>
        </div>
      )}
    </div>
  );
}
